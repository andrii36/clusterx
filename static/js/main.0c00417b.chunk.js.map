{"version":3,"sources":["Components/Header/Header.module.css","Components/Content/Content.module.css","Assets/logo-clusterx.png","Components/Header/Header.jsx","Components/Content/Content.jsx","Components/Categories/RealEstate.jsx","Api/api.js","Redux/realEstate-reducer.js","Components/Categories/RealEstateContainer.jsx","Redux/auth-reducer.js","App.js","serviceWorker.js","Redux/redux-store.js","index.js"],"names":["module","exports","Header","className","styles","header","logo","src","login","this","props","isAuth","name","React","Component","connect","state","auth","Content","content","type","placeholder","categories","to","RealEstate","houses","map","h","description","appartments","a","instance","axios","withCredentials","baseURL","realEstateApi","get","then","response","initialState","id","multiFamily","SET_HOUSES","setHouses","data","realEstateReducer","action","RealEstateContainer","getRealEstateThunk","realEstate","dispatch","email","authReducer","App","setAuthData","path","render","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0c00417b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__7h1Y9\",\"logo\":\"Header_logo__3gHrA\",\"login\":\"Header_login__2sPoo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content_content__34BNq\",\"categories\":\"Content_categories__-xLYp\"};","module.exports = __webpack_public_path__ + \"static/media/logo-clusterx.e0c6e41b.png\";","import React from 'react';\r\nimport logo from '../../Assets/logo-clusterx.png';\r\nimport styles from './Header.module.css';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Header extends React.Component {\r\n    \r\n    render(){\r\n        return (\r\n        <div className={styles.header}>\r\n            <img className={styles.logo} src={logo}/>\r\n            <div className={styles.login}>\r\n                {!this.props.isAuth &&\r\n                    <div>\r\n                        <button>SignUp</button>\r\n                        <button>SignIn</button>\r\n                    </div>}\r\n                {this.props.isAuth &&\r\n                <span>{this.props.name}</span>}\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    name: state.auth.name\r\n})\r\nexport default connect(mapStateToProps, null) (Header);","import React from 'react';\r\nimport styles from './Content.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Content = (props) => {\r\n  return (\r\n    <div className={styles.content}>\r\n        <form>\r\n          <span>\r\n            <input type=\"text\" name=\"mainSearch\" placeholder=\"what are you looking for?\"/>\r\n          </span>\r\n          <span>\r\n            <input type=\"text\" name=\"location\" placeholder=\"location\"/>\r\n          </span>\r\n          <button>Search</button>\r\n        </form>\r\n        <div>\r\n          <h1>Categories</h1>\r\n            <div className={styles.categories}>\r\n              <span><NavLink to=\"/real-estate\">Real Estate</NavLink></span>\r\n              <span><NavLink to=\"/transport\">Transport</NavLink></span>\r\n              <span><NavLink to=\"/construction\">Construction</NavLink></span>\r\n              <span><NavLink to=\"/clothing\">Clothing</NavLink></span>\r\n              <span><NavLink to=\"/house\">House</NavLink></span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\n\r\nconst RealEstate = (props) => {\r\n    let houses = props.houses.map(h => h.description);\r\n    let appartments = props.appartments.map(a => a.description)\r\n\r\n    return(\r\n        <div>\r\n            <h1>RealEstate</h1>\r\n            <div>\r\n                {houses}\r\n                {appartments}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default RealEstate;","import * as axios from 'axios';\r\n\r\nlet instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"http://localhost:3001\"\r\n})\r\n\r\nexport const realEstateApi = {\r\n    getRealEstate(){\r\n        return(\r\n            instance.get(\"/real-estate\")\r\n            .then(response => {\r\n                return response\r\n            })\r\n        )\r\n    }\r\n}","import { realEstateApi } from \"../Api/api\";\r\n\r\nlet initialState = {\r\n    houses: [\r\n        {id:1, description: \"house 1\"},\r\n        {id:2, description: \"house 2\"},\r\n        {id:3, description: \"house 3\"},\r\n        {id:4, description: \"house 4\"},\r\n        {id:5, description: \"house 5\"}\r\n    ],\r\n    appartments: [\r\n        {id:1, description: \"appartment 1\"},\r\n        {id:2, description: \"appartment 2\"},\r\n        {id:3, description: \"appartment 3\"},\r\n        {id:4, description: \"appartment 4\"},\r\n        {id:5, description: \"appartment 5\"}\r\n    ],\r\n    multiFamily: [\r\n\r\n    ]\r\n}\r\n\r\nconst realEstateReducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case SET_HOUSES: {\r\n            return{\r\n                ...state,\r\n                houses: [...state.houses, ...action.data]\r\n            }\r\n        }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getRealEstateThunk= () => (dispatch) => {\r\n    realEstateApi.getRealEstate()\r\n    .then(response => {\r\n        dispatch(setHouses(response.data))\r\n    })\r\n}\r\nconst SET_HOUSES = \"SET_HOUSES\";\r\nconst setHouses = (data) => ({type: SET_HOUSES, data})\r\n\r\nexport default realEstateReducer;","import React from 'react';\r\nimport RealEstate from './RealEstate';\r\nimport {connect} from 'react-redux';\r\nimport { getRealEstateThunk } from '../../Redux/realEstate-reducer';\r\n\r\nclass RealEstateContainer extends React.Component {\r\n    componentDidMount(){\r\n        this.props.getRealEstateThunk()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <RealEstate {...this.props}/>\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return({\r\n        houses: state.realEstate.houses,\r\n        appartments: state.realEstate.appartments\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, {getRealEstateThunk})(RealEstateContainer);;","let initialState = {\r\n    isAuth: false,\r\n    email: null,\r\n    id: null,\r\n    name: null\r\n}\r\nconst SET_AUTH_DATA = \"SET_AUTH_DATA\";\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case SET_AUTH_DATA: {\r\n            return{\r\n                ...state,\r\n                isAuth: true,\r\n                email: \"greatidea@gmail.com\",\r\n                id: 11,\r\n                name: \"Andrii\"\r\n            }\r\n        }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthData = () => ({type: SET_AUTH_DATA});\r\n\r\nexport default authReducer;","import React from 'react';\nimport './App.css';\nimport Header from './Components/Header/Header';\nimport Content from './Components/Content/Content';\nimport {Route} from 'react-router-dom';\nimport RealEstateContainer from './Components/Categories/RealEstateContainer';\nimport { connect } from 'react-redux';\nimport { setAuthData } from './Redux/auth-reducer';\n\nclass App extends React.Component {\n  componentDidMount(){\n    this.props.setAuthData()\n  }\n  \n  render(){\n    return (\n    <div className=\"App\">\n        <Header/>\n        <Route path=\"/\" render={() => <Content/>}/>\n        <Route path=\"/real-estate\" render={() => <RealEstateContainer/>}/>\n    </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, {setAuthData})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers, createStore, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport realEstateReducer from \"./realEstate-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    auth: authReducer,\r\n    realEstate: realEstateReducer\r\n})\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './Redux/redux-store';\n\nReactDOM.render(\n    <HashRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}